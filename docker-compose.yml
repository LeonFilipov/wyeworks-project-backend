#version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./dev.dockerfile
    container_name: rails-api
    ports:
      - "3000:3000" # Mapeo de puertos del contenedor a la maquina host
    volumes:
      - .:/api # Volumen para persistir los cambios en el código
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/RailsDB  
      # postgresql://[usuario]:[contraseña]@[nombre de servicio de la base de datos]:[puerto]/[nombre de la base de datos]
    networks:
      app-network:
          ipv4_address: 172.20.0.2

  postgres:
    image: postgres:latest
    environment: # variables de entorno para la base de datos
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=RailsDB # Nombre de la base de datos, creo que debe coincidir con el nombre de la base de datos en el archivo de configuración de la API
    volumes:
      - postgres-data:/var/lib/postgresql/data # Acá se persiste la información de la DB
    ports:
      - "5433:5432" # Mapeo de puertos del contenedor a la maquina host
    networks:
      app-network:
          ipv4_address: 172.20.0.3

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "un.mail@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: "False"
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      app-network:
          ipv4_address: 172.20.0.4

volumes: # Volumenes para persistir la información de la base de datos y pgadmin
  postgres-data:
  pgadmin-data:

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24